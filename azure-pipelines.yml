trigger:
- main

pool: myAgentPool

variables:
  azureServiceConnectionId: 'myServiceConnection'
  webAppName: 'flask-sklearn-app'
  environmentName: 'flask-ml-service'
  projectRoot: $(System.DefaultWorkingDirectory)

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    displayName: Build and Lint
    pool:
      name: myAgentPool

    steps:
    - script: |
        python3.10 -m pip install --upgrade pip
        python3.10 -m pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: 'Install dependencies with system Python'

    - script: |
        export PATH=$HOME/.local/bin:$PATH
        make install
      workingDirectory: $(projectRoot)
      displayName: 'Run make install'

    - script: |
        export PATH=$HOME/.local/bin:$PATH
        make lint
      workingDirectory: $(projectRoot)
      displayName: 'Run lint checks'

    - script: |
        export PATH=$HOME/.local/bin:$PATH
        make test
      workingDirectory: $(projectRoot)
      displayName: 'Run test checks'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: DeployWebApp
    displayName: Deploy to Azure Web App
    environment: $(environmentName)
    pool:
      name: myAgentPool
    strategy:
      runOnce:
        deploy:
          steps:
          - download: drop
            artifact: drop

          - task: AzureWebApp@1
            displayName: 'Deploy to Azure Web App'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appType: webApp
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
